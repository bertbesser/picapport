version: 2
jobs:
  update:
    machine: true
    steps:
      - run: echo "Updating Docker engine to have multi-stage builds"
      - run: sudo service docker stop
      - run: curl -fsSL https://get.docker.com/ | sudo sh
      - run: docker version
  build_amd64:
    working_directory: ~/picapport
    machine: true
    steps:
      - checkout
      - run: make ARCHITECTURES=amd64
      - run: make ARCHITECTURES=amd64 push
  build_arm32v6:
    working_directory: ~/picapport
    machine: true
    steps:
      - checkout
      - run: make ARCHITECTURES=arm32v6
      - run: make ARCHITECTURES=arm32v6 push
  build_arm64v8:
    working_directory: ~/picapport
    machine: true
    steps:
      - checkout
      - run: make ARCHITECTURES=arm64v8
      - run: make ARCHITECTURES=arm64v8 push
  manifest:
    machine: true
    steps:
      - checkout
      - run: echo "Downloading docker client with manifest command"
      - run: wget https://6582-88013053-gh.circle-artifacts.com/1/work/build/docker-linux-amd64
      - run: mv docker-linux-amd64 docker
      - run: chmod +x docker
      - run: ./docker version
      - run: ./docker login -u ${DOCKER_USER} -p ${DOCKER_PASS} 
      - run: echo "Pushing manifest $REPO:latest"
      - run: ./docker -D manifest create "$REPO:latest" "$REPO:linux-amd64-latest" "$REPO:linux-arm32v6-latest" "$REPO:linux-arm64v8-latest"
      - run: ./docker manifest annotate "$REPO:latest" "$REPO:linux-arm32v6-latest" --os linux --arch arm --variant v6
      - run: ./docker manifest annotate "$REPO:latest" "$REPO:linux-arm64v8-latest" --os linux --arch arm64 --variant v8
      - run: ./docker manifest push "$REPO:latest"


workflows:
  version: 2
  build-and-deploy:
    jobs:
      - update
      - build_amd64:
          requires:
            - update
      - build_arm32v6:
          requires:
            - update
      - build_arm64v8:
          requires:
            - update
      - manifest:
          requires:
            - build_amd64
            - build_arm32v6
            - build_arm64v8
